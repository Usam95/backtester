{
    "tc": 0.000750,

    "dataset_conf": {
        "symbol": "BTCUSDT",
        "freq": "1d",
        "start_date": "",
        "end_date": "",
        "split_date": "2022-12-31 23:59:00",
        "mode": "full",

        "target_conf": {
            "comment_": "possible values: 'Simple', 'MA_Relative', 'Momentum', 'ROC', 'RSI_Cross', 'Consecutive_Increases','Exceed_Threshold', 'Volatility_Breakout', Exceed_Avg_Returns",
            "target": "Exceed_Avg_Returns",
            "comment_": "for strategies like 'Exceed_Avg_Returns' and 'Volatility_Breakout",
            "N": 5,
            "comment_": "for the 'Exceed_Threshold' strategy",
            "threshold": 0.01
        }
    },
    "model_name": "RandomForestClassifier",
    "model_type": "classification",
    "models": ["RandomForestClassifier"],

    "models_config": [
      {
          "model": "LogisticRegression",
          "params": {
              "C": [0.001, 0.01, 0.1, 1, 10, 100, 1000],
              "penalty": ["l1", "l2"],
              "solver": ["liblinear", "saga"]
          }
      },

      {
          "model": "KNeighborsClassifier",
          "params": {
              "n_neighbors": [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21],
              "weights": ["uniform", "distance"]
          }
      },
      {
          "model": "DecisionTreeClassifier",
          "params": {
              "max_depth": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
          }
      },
      {
          "model": "SVC",
          "params": {
              "C": [0.1, 0.3, 0.5, 0.7, 0.9, 1.0, 1.3, 1.5],
              "kernel": ["linear", "poly", "rbf"]
          }
      },

      {
          "model": "AdaBoostClassifier",
          "params": {
              "n_estimators": [10, 20, 30, 50, 100, 150],
              "learning_rate": [0.001, 0.01, 0.1, 0.5, 1.0, 1.5],
              "algorithm": ["SAMME", "SAMME.R"]
          }
      },
      {
          "model": "AdaBoostClassifier_",
          "params": {
              "n_estimators": [30],
              "learning_rate": [ 0.1],
              "algorithm": ["SAMME.R"]
          }
      },
      {
          "model": "GradientBoostingClassifier",
          "params": {
              "n_estimators": [20, 50, 100],
              "max_depth": [3, 5, 10]
           }
      },
      {
          "model": "RandomForestClassifier",
          "params": {
              "n_estimators": [20, 80],
              "max_depth": [5, 10],
              "criterion": ["gini", "entropy"]
          }
      },
      {
          "model": "ExtraTreesClassifier",
          "params": {
              "n_estimators": [20, 80],
              "max_depth": [5, 10],
              "criterion": ["gini", "entropy"]
          }
      }
    ]
}


